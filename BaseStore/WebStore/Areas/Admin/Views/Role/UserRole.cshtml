@using Core.Dto.ViewModel.User
@using System.Collections
@model Core.Dto.ViewModel.Admin.Role.EditUserRoleVm
@{
    ViewData["Title"] = "UserRole";

}

<div class="card card-primary">
    <div class="card-header">
        کاربران گروه @Model.RoleName
    </div>

    <div class="card-body">
        
        @if (TempData["Success"] != null)
        {
            <div class="col-md-3">
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="col-md-3">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>

        }
        <form asp-action="UserRole">
            <input type="hidden" asp-for="RoleId"/>
            @foreach (var item in ViewBag.AdminUser as IEnumerable<ShowUserBrifViewModel>)
            {

                <input type="checkbox" class="btn-check" name="UserList" value="@item.UserId" @((Model.UserRoles.Any(r => r.UserId == item.UserId) ? "checked" : ""))/>@item.UserName
            }
            <input type="submit" class="btn btn-success" value="ثبت"/>
        </form>
    </div>
</div>
