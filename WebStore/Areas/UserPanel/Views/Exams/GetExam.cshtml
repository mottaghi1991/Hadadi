@model IEnumerable<Core.Dto.ViewModel.Exam.ShowExamToUserViewModel>
@{
    ViewData["Title"] = "Index";
}
<div class="card card-primary mt-3">
    <div class="card-header text-center">آزمون رغبت سنجی</div>
    <div class="card-body">

        @if (Model.FirstOrDefault().QuestionId == 4)
        {
            <form method="post" asp-action="SubmitExamFour">
                @foreach (var questionGroup in Model
               .GroupBy(q => new { q.QuestionId, q.QuestionTitle, q.QuestionDesc })
               .OrderBy(q => q.Key.QuestionId))
                {
                    <div class="mb-4">
                        <h4>@questionGroup.Key.QuestionTitle</h4>
                        <p>@questionGroup.Key.QuestionDesc</p>
                        <hr />

                        @{
                            var optionGroups = questionGroup
                            .GroupBy(x => new { x.OptionTitle, x.OptionOrder })
                            .OrderBy(g => g.Key.OptionOrder)
                            .ToList();

                            int maxItemsPerOption = optionGroups.Max(g => g.Count());
                        }

                        @for (int i = 0; i < maxItemsPerOption; i++)
                        {
                            <div class="mb-3">
                                <h5>مرحله @(i + 1)</h5>
                                @foreach (var option in optionGroups)
                                {
                                    var item = option.Skip(i).FirstOrDefault();
                                    if (item != null)
                                    {
                                        <div class="form-group">
                                            <label>
                                                <strong> @item.OptionTitle:</strong> @item.subOptionTitle
                                                <select name="Answers[@item.subOptionId]" class="form-control">
                                                    <option value="1">1</option>
                                                    <option value="2">2</option>
                                                    <option value="3">3</option>
                                                    <option value="4">4</option>
                                                    <option value="5">5</option>
                                                    <option value="6">6</option>
                                                    <option value="7">7</option>
                                                </select>

                                                <!-- اضافه کردن اطلاعات اضافی به صورت hidden -->
                                                <input type="hidden" name="QuestionIds[@item.subOptionId]" value="@questionGroup.Key.QuestionId" />
                                                <input type="hidden" name="OptionIds[@item.subOptionId]" value="@item.OptionId" />
                                            </label>
                                        </div>
                                    }
                                }
                                <hr />
                            </div>
                        }
                    </div>
                }
                <button type="submit" class="btn btn-primary">ارسال پاسخ‌ها</button>
            </form>



        }
        else
        {
            <form method="post" asp-action="SubmitExam">
                @foreach (var QuestionItem in Model.GroupBy(q => new { q.QuestionId, q.QuestionTitle, q.QuestionDesc }))
                {
                    <div>
                        <h6>@QuestionItem.Key.QuestionTitle</h6>
                        <h6>@QuestionItem.Key.QuestionDesc</h6>
                        <hr />
                        @foreach (var OptionItem in QuestionItem.GroupBy(o => new { o.OptionId, o.OptionTitle }))
                        {
                            <h4>@OptionItem.Key.OptionTitle)</h4>
                            @foreach (var SubOptionItem in OptionItem)
                            {
                                <label>
                                    <input type="checkbox" name="SelectedOptions[@QuestionItem.Key.QuestionId][@OptionItem.Key.OptionId][]" value="@SubOptionItem.subOptionId" />
                                    @SubOptionItem.subOptionTitle
                                </label>
                                <br />
                            }
                            <hr />
                        }
                    </div>

                }
                <button type="submit" class="btn btn-primary">سوال بعدی</button>
            </form>
        }

    </div>

</div>

@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            form.addEventListener("submit", function (e) {
                const checkboxes = form.querySelectorAll('input[type="checkbox"]:checked');
                const selects = form.querySelectorAll('select');

                let hasChecked = checkboxes.length > 0;

                if (!hasChecked) {
                    for (let i = 0; i < selects.length; i++) {
                        if (selects[i].value !== "") {
                            hasChecked = true;
                            break;
                        }
                    }
                }

                if (!hasChecked) {
                    e.preventDefault();

                      Swal.fire({
            title: "خطا!",
            text: "لطفاً حداقل یک گزینه را انتخاب کنید.",
            icon: "error",
            confirmButtonText:"باشه"
        });
                }
            });
        });
    </script>
}

